name: Update Icons

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-icons:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Clone fanmingming/live
        run: |
          git clone --depth 1 --branch main https://github.com/fanmingming/live.git
          mkdir -p icon
          mkdir -p icon_new
          for file in live/tv/*.png; do
              filename=$(basename "$file" .png | tr '[:lower:]' '[:upper:]' | sed 's/[ _-]//g')
              cp "$file" "icon_new/${filename}.png"
          done

      - name: Clone taksssss/TVlogo
        run: |
          git clone --depth 1 --branch main https://github.com/taksssss/TVlogo.git

      - name: Extract channel icons from markdown files
        run: |
          md_files="TVlogo/md/*.md"
          for md_file in $md_files; do
            while IFS= read -r line; do
              echo "$line" | awk -F'|' '
                {
                  for (i = 2; i <= NF; i += 2) {
                    channel_name = $i
                    match($(i + 1), /<img src="([^"]+)"/, arr)
                    image_url = arr[1]
                    if (channel_name && image_url) {
                      gsub(/https:\/\/raw.githubusercontent.com\/taksssss\/TVlogo\/.*\/img\//, "TVlogo/img/", image_url)
                      gsub(/[ _-]/, "", channel_name)
                      channel_name = toupper(channel_name)
                      sub(/频道$/, "", channel_name)
                      printf "%s:%s\n", channel_name, image_url
                    }
                  }
                }
              ' | while IFS=: read -r channel_name image_url; do
                mv "$image_url" "TVlogo/img/$channel_name.png" || echo "Failed to move $image_url"
              done
            done < "$md_file"
          done

      - name: Filter and Copy Icons
        run: |
          filter_keywords=("NEWTV" "CBN" "IHOT" "汕头" "卫视")
          ignore_keywords=("CCTV")
          
          for file in TVlogo/img/*.png; do
            filename=$(basename "$file")
          
            for keyword in "${ignore_keywords[@]}"; do
              if [[ $filename == *"$keyword"* ]]; then
                continue 2
              fi
            done
          
            should_copy=true
            if [[ -f "icon_new/$filename" ]]; then
              should_copy=false
              for keyword in "${filter_keywords[@]}"; do
                if [[ $filename == *"$keyword"* ]]; then
                  should_copy=true
                  break
                fi
              done
            fi
          
            if $should_copy; then
              cp "$file" "icon_new/$filename"
            fi
          done

      - name: Crop Icons
        run: |
          for file in icon_new/*.png; do
            convert "$file" -trim "$file"
          done

      - name: Compare and Replace
        run: |
          for new_file in icon_new/*.png; do
            filename=$(basename "$new_file")
            if [ ! -f "icon/$filename" ] || ! compare -metric AE "$new_file" "icon/$filename" null: 2> /dev/null; then
              cp "$new_file" "icon/$filename"
            fi
          done

      - name: Generate iconList_default.json
        run: |
          echo '{' > iconList_default.json
          for file in icon/*.png; do
            filename=$(basename "$file" .png)
            echo "\"$filename\": \"https://gcore.jsdelivr.net/gh/taksssss/tv/icon/$filename.png\"," >> iconList_default.json
          done
          sed -i '$ s/,$//' iconList_default.json
          echo '}' >> iconList_default.json

      - name: Commit Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add icon iconList_default.json
          git commit -m "Update icons and icon list" || echo "No changes to commit"
          git push
